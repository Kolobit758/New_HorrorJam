using System.Collections.Generic;
using UnityEngine;

[CreateAssetMenu(fileName = "NewSkill", menuName = "Skills/GhostChaseSkill")]
public class GhostChaseSkill : ScriptableObject, ISkill
{
    [Header("Skill Info")]
    public StatusData statusData;              // ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    public List<StatusData> ghostCanChase;     // ‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏ú‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡∏π‡∏Å‡πÑ‡∏•‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏Å‡∏¥‡∏•‡∏ô‡∏µ‡πâ
    public float chaseDelay = 0.2f;            // ‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ú‡∏µ‡∏´‡∏ô‡∏µ

    public void UseItem()
    {
        // ‡∏´‡∏≤ Ghost ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏â‡∏≤‡∏Å
        GhostScript[] allGhosts = FindObjectsByType<GhostScript>(FindObjectsInactive.Exclude, FindObjectsSortMode.None);
        Debug.Log($"‡∏û‡∏ö‡∏ú‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {allGhosts.Length} ‡∏ï‡∏±‡∏ß");

        int chasedCount = 0;

        foreach (var ghost in allGhosts)
        {
            if (ghost == null || ghost.thisStatusData == null) continue;

            // ‚úÖ ‡πÑ‡∏•‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô ghostCanChase
            if (ghostCanChase.Contains(ghost.thisStatusData))
            {
                ghost.ChasedAway();
                chasedCount++;
                Debug.Log($"üí® ‡πÑ‡∏•‡πà‡∏ú‡∏µ‡∏ä‡∏∑‡πà‡∏≠ {ghost.thisStatusData.objectName}");
            }
        }

        Debug.Log($"üëª ‡πÑ‡∏•‡πà‡∏ú‡∏µ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {chasedCount} ‡∏ï‡∏±‡∏ß");
    }
}